[{"C:\\Users\\Achraff\\projects\\store\\src\\index.tsx":"1","C:\\Users\\Achraff\\projects\\store\\src\\reportWebVitals.ts":"2","C:\\Users\\Achraff\\projects\\store\\src\\App.tsx":"3","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Sidebar.tsx":"4","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Dashboard.tsx":"5","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Container.tsx":"6","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Navbar.tsx":"7","C:\\Users\\Achraff\\projects\\store\\src\\routes.tsx":"8","C:\\Users\\Achraff\\projects\\store\\src\\configureStore.ts":"9","C:\\Users\\Achraff\\projects\\store\\src\\store\\index.ts":"10","C:\\Users\\Achraff\\projects\\store\\src\\utils\\api.ts":"11","C:\\Users\\Achraff\\projects\\store\\src\\views\\Store.tsx":"12","C:\\Users\\Achraff\\projects\\store\\src\\views\\Etudiant\\CreateEtudiant.tsx":"13","C:\\Users\\Achraff\\projects\\store\\src\\components\\Etudiant\\EtudiantForm.tsx":"14","C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\sagas.ts":"15","C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\types.ts":"16","C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\actions.ts":"17","C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\reducer.ts":"18","C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\sagas.ts":"19","C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\reducer.ts":"20","C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\types.ts":"21","C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\actions.ts":"22","C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\sagas.ts":"23","C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\reducer.ts":"24","C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\types.ts":"25","C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\actions.ts":"26","C:\\Users\\Achraff\\projects\\store\\src\\views\\Etudiant\\ListEtudiant.tsx":"27","C:\\Users\\Achraff\\projects\\store\\src\\components\\Etudiant\\EtudiantList.tsx":"28","C:\\Users\\Achraff\\projects\\store\\src\\views\\Enseignant\\ListEnseignant.tsx":"29","C:\\Users\\Achraff\\projects\\store\\src\\components\\Enseignant\\EnseignantList.tsx":"30","C:\\Users\\Achraff\\projects\\store\\src\\components\\Enseignant\\EnseignantForm.tsx":"31","C:\\Users\\Achraff\\projects\\store\\src\\views\\Cadre\\ListCadre.tsx":"32","C:\\Users\\Achraff\\projects\\store\\src\\components\\Cadre\\CadreList.tsx":"33","C:\\Users\\Achraff\\projects\\store\\src\\components\\Cadre\\CadreForm.tsx":"34","C:\\Users\\Achraff\\projects\\store\\src\\store\\resultats\\reducer.ts":"35","C:\\Users\\Achraff\\projects\\store\\src\\store\\absences\\reducer.ts":"36","C:\\Users\\Achraff\\projects\\store\\src\\store\\resultats\\types.ts":"37","C:\\Users\\Achraff\\projects\\store\\src\\store\\absences\\types.ts":"38","C:\\Users\\Achraff\\projects\\store\\src\\store\\absences\\sagas.ts":"39","C:\\Users\\Achraff\\projects\\store\\src\\store\\resultats\\sagas.ts":"40","C:\\Users\\Achraff\\projects\\store\\src\\store\\resultats\\actions.ts":"41","C:\\Users\\Achraff\\projects\\store\\src\\store\\absences\\actions.ts":"42","C:\\Users\\Achraff\\projects\\store\\src\\views\\Absence\\ListAbsence.tsx":"43","C:\\Users\\Achraff\\projects\\store\\src\\views\\Resultat\\ListResultat.tsx":"44","C:\\Users\\Achraff\\projects\\store\\src\\components\\Absence\\AbsenceForm.tsx":"45","C:\\Users\\Achraff\\projects\\store\\src\\components\\Absence\\AbsenceList.tsx":"46","C:\\Users\\Achraff\\projects\\store\\src\\components\\Resultat\\ResultatForm.tsx":"47","C:\\Users\\Achraff\\projects\\store\\src\\components\\Resultat\\ResultatList.tsx":"48","C:\\Users\\Achraff\\projects\\store\\src\\views\\Statistique\\ResultatView.tsx":"49","C:\\Users\\Achraff\\projects\\store\\src\\components\\Statistique\\LineChart.tsx":"50","C:\\Users\\Achraff\\projects\\store\\src\\components\\Statistique\\PieChart.tsx":"51","C:\\Users\\Achraff\\projects\\store\\src\\components\\Statistique\\Ranking.tsx":"52","C:\\Users\\Achraff\\projects\\store\\src\\views\\Statistique\\AbsenceView.tsx":"53","C:\\Users\\Achraff\\projects\\store\\src\\views\\Home.tsx":"54"},{"size":735,"mtime":1607349062010,"results":"55","hashOfConfig":"56"},{"size":425,"mtime":1607274983784,"results":"57","hashOfConfig":"56"},{"size":703,"mtime":1607348052309,"results":"58","hashOfConfig":"56"},{"size":2354,"mtime":1609889147960,"results":"59","hashOfConfig":"56"},{"size":677,"mtime":1609462234855,"results":"60","hashOfConfig":"56"},{"size":602,"mtime":1609461827427,"results":"61","hashOfConfig":"56"},{"size":623,"mtime":1609461692238,"results":"62","hashOfConfig":"56"},{"size":1398,"mtime":1609887394074,"results":"63","hashOfConfig":"56"},{"size":1539,"mtime":1607349079422,"results":"64","hashOfConfig":"56"},{"size":1907,"mtime":1609880101408,"results":"65","hashOfConfig":"56"},{"size":580,"mtime":1609894486068,"results":"66","hashOfConfig":"56"},{"size":1473,"mtime":1609878753083,"results":"67","hashOfConfig":"56"},{"size":266,"mtime":1609207786444,"results":"68","hashOfConfig":"56"},{"size":4580,"mtime":1609877648104,"results":"69","hashOfConfig":"56"},{"size":4219,"mtime":1609800415739,"results":"70","hashOfConfig":"56"},{"size":1306,"mtime":1609522032215,"results":"71","hashOfConfig":"56"},{"size":1490,"mtime":1609522043654,"results":"72","hashOfConfig":"56"},{"size":2391,"mtime":1609874952314,"results":"73","hashOfConfig":"56"},{"size":4459,"mtime":1609798127625,"results":"74","hashOfConfig":"56"},{"size":2358,"mtime":1609874957361,"results":"75","hashOfConfig":"56"},{"size":1227,"mtime":1609510577317,"results":"76","hashOfConfig":"56"},{"size":1582,"mtime":1609460227447,"results":"77","hashOfConfig":"56"},{"size":4023,"mtime":1609791117740,"results":"78","hashOfConfig":"56"},{"size":2238,"mtime":1609874913460,"results":"79","hashOfConfig":"56"},{"size":1072,"mtime":1609522266703,"results":"80","hashOfConfig":"56"},{"size":1352,"mtime":1609522259367,"results":"81","hashOfConfig":"56"},{"size":2274,"mtime":1609800424299,"results":"82","hashOfConfig":"56"},{"size":4125,"mtime":1609811573323,"results":"83","hashOfConfig":"56"},{"size":2292,"mtime":1609462071067,"results":"84","hashOfConfig":"56"},{"size":3483,"mtime":1609811237310,"results":"85","hashOfConfig":"56"},{"size":4300,"mtime":1609886876421,"results":"86","hashOfConfig":"56"},{"size":2190,"mtime":1609462081836,"results":"87","hashOfConfig":"56"},{"size":3372,"mtime":1609811220697,"results":"88","hashOfConfig":"56"},{"size":4215,"mtime":1609886897897,"results":"89","hashOfConfig":"56"},{"size":2310,"mtime":1609874972342,"results":"90","hashOfConfig":"56"},{"size":2286,"mtime":1609874891904,"results":"91","hashOfConfig":"56"},{"size":1165,"mtime":1609522140307,"results":"92","hashOfConfig":"56"},{"size":1063,"mtime":1609806214073,"results":"93","hashOfConfig":"56"},{"size":4267,"mtime":1609874766481,"results":"94","hashOfConfig":"56"},{"size":4318,"mtime":1609807653108,"results":"95","hashOfConfig":"56"},{"size":1490,"mtime":1609807606519,"results":"96","hashOfConfig":"56"},{"size":1456,"mtime":1609522232452,"results":"97","hashOfConfig":"56"},{"size":2396,"mtime":1609890243645,"results":"98","hashOfConfig":"56"},{"size":2500,"mtime":1609877709317,"results":"99","hashOfConfig":"56"},{"size":3973,"mtime":1609890208027,"results":"100","hashOfConfig":"56"},{"size":3207,"mtime":1609890189560,"results":"101","hashOfConfig":"56"},{"size":4125,"mtime":1609879360399,"results":"102","hashOfConfig":"56"},{"size":3227,"mtime":1609874647426,"results":"103","hashOfConfig":"56"},{"size":3313,"mtime":1609887063767,"results":"104","hashOfConfig":"56"},{"size":979,"mtime":1609882035798,"results":"105","hashOfConfig":"56"},{"size":1028,"mtime":1609883033772,"results":"106","hashOfConfig":"56"},{"size":1159,"mtime":1609885774832,"results":"107","hashOfConfig":"56"},{"size":2734,"mtime":1609887073571,"results":"108","hashOfConfig":"56"},{"size":1395,"mtime":1609889415634,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"pkylf2",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"112"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Achraff\\projects\\store\\src\\index.tsx",[],["233","234"],"C:\\Users\\Achraff\\projects\\store\\src\\reportWebVitals.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\App.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Sidebar.tsx",["235","236"],"import React from \"react\";\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport {\r\n  DesktopOutlined,\r\n  BarChartOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  HomeOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"../stylesheets/Sidebar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default class Sidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed: boolean) => {\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.resize.bind(this));\r\n    this.resize();\r\n  }\r\n\r\n  resize() {\r\n    this.setState({ collapsed: window.innerWidth <= 760 });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.resize.bind(this));\r\n  }\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    return (\r\n      <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n        <div\r\n          className=\"logo\"\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: \"20px\",\r\n            marginBottom: \"25px\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"/projetSOA.svg\"\r\n            style={{ width: collapsed ? \"50px\" : \"120px\" }}\r\n          />\r\n        </div>\r\n        <Menu theme=\"dark\" defaultSelectedKeys={[\"0\"]} mode=\"inline\">\r\n          <Menu.Item key=\"0\" icon={<HomeOutlined />}>\r\n            <Link to=\"/\"> Accueil</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\" icon={<TeamOutlined />}>\r\n            <Link to=\"/etudiants\"> Etudiants</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n            <Link to=\"/enseignants\"> Enseignants</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<DesktopOutlined />}>\r\n            <Link to=\"/cadres\"> Cadres administratifs</Link>\r\n          </Menu.Item>\r\n          <SubMenu key=\"sub1\" icon={<BarChartOutlined />} title=\"Statitiques\">\r\n            <Menu.Item key=\"4\">\r\n              {\" \"}\r\n              <Link to=\"/statistiques/absences\"> Absences</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"5\">\r\n              {\" \"}\r\n              <Link to=\"/statistiques/resultats\"> Résultats</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Sider>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Dashboard.tsx",["237"],"import React from \"react\";\r\nimport { Layout, Breadcrumb } from \"antd\";\r\nimport \"../stylesheets/Sidebar.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Container from \"./Container\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nexport default class Dashboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Sidebar />\r\n        <Layout className=\"site-layout\">\r\n          <Navbar />\r\n          <Container />\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Projet SOA ©2021 By Achraf Chaibi & Adel Boushih\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Container.tsx",["238"],"import React from \"react\";\r\nimport { Layout, Breadcrumb } from \"antd\";\r\nimport Routes from \"../../routes\";\r\nconst { Content } = Layout;\r\n\r\nexport default class Dashboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <Content style={{ margin: \"0 16px\", paddingTop: \"30px\" }}>\r\n        {/* <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n          <Breadcrumb.Item>User</Breadcrumb.Item>\r\n          <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n        </Breadcrumb> */}\r\n        <div style={{ padding: 24, minHeight: 360 }}>\r\n          <Routes />\r\n        </div>\r\n      </Content>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Navbar.tsx",["239"],"import React from \"react\";\r\nimport { Layout, Space, Avatar, Row, Col } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Header } = Layout;\r\n\r\nexport default class Dashboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <Header\r\n        className=\"site-layout-background\"\r\n        style={{ padding: 0, paddingRight: \"35px\" }}\r\n      >\r\n        <Row justify=\"end\">\r\n          <Col>\r\n            <span style={{ marginRight: \"10px\" }}>Administrateur</span>\r\n            <Avatar size=\"large\" icon={<UserOutlined />} />\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Achraff\\projects\\store\\src\\routes.tsx",["240"],"C:\\Users\\Achraff\\projects\\store\\src\\configureStore.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\index.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\utils\\api.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\views\\Store.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\views\\Etudiant\\CreateEtudiant.tsx",["241"],"import React from \"react\";\r\nimport EtudiantForm from \"../../components/Etudiant/EtudiantForm\";\r\nimport { Card } from \"antd\";\r\nconst CreateEtudiant: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Card></Card>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateEtudiant;\r\n",["242","243"],"C:\\Users\\Achraff\\projects\\store\\src\\components\\Etudiant\\EtudiantForm.tsx",["244","245","246"],"C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\sagas.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\types.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\actions.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\reducer.ts",["247","248"],"C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\sagas.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\reducer.ts",["249","250"],"C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\types.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\actions.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\sagas.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\reducer.ts",["251","252"],"C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\types.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\actions.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\views\\Etudiant\\ListEtudiant.tsx",["253"],"import React, { useState } from \"react\";\r\nimport EtudiantList from \"../../components/Etudiant/EtudiantList\";\r\nimport { Card } from \"antd\";\r\nimport { Button, Row, Col, notification, Typography } from \"antd\";\r\nimport { UserAddOutlined, SmileOutlined } from \"@ant-design/icons\";\r\n\r\nimport EtudiantForm from \"../../components/Etudiant/EtudiantForm\";\r\nimport { Etudiant } from \"../../store/etudiants/types\";\r\nconst { Text } = Typography;\r\nconst ListEtudiant: React.FC = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [selectedEtudiant, setSelectedEtudiant] = useState<Etudiant>();\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const onRequestFinished = (type: string, message: string) => {\r\n    notification.open({\r\n      message: type,\r\n      description: message,\r\n      icon: <SmileOutlined style={{ color: \"#108ee9\" }} />,\r\n    });\r\n    setIsModalVisible(false);\r\n  };\r\n  const showModal = (create: boolean) => {\r\n    if (create) {\r\n      setTitle(\"Ajouter un nouveau etudiant\");\r\n      setSelectedEtudiant(undefined);\r\n    }\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const selectEtudiant = (etudiant: Etudiant) => {\r\n    setSelectedEtudiant(etudiant);\r\n    setTitle(\"Modifier etudiant\");\r\n    showModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-between\" className=\"mb-2\">\r\n        <Col>\r\n          <h3 className=\"title\">Gestion des étudiant</h3>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => showModal(true)}\r\n            icon={<UserAddOutlined />}\r\n          >\r\n            Ajouter un nouveau etudiant\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Card>\r\n        <EtudiantList\r\n          selectEtudiant={selectEtudiant}\r\n          onRequestFinished={onRequestFinished}\r\n        />\r\n      </Card>\r\n      <EtudiantForm\r\n        title={title}\r\n        isModalVisible={isModalVisible}\r\n        handleOk={handleOk}\r\n        handleCancel={handleCancel}\r\n        onRequestFinished={onRequestFinished}\r\n        selectedEtudiant={selectedEtudiant}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default ListEtudiant;\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\Etudiant\\EtudiantList.tsx",["254","255","256"],"import { Table, Popconfirm, Button, Space } from \"antd\";\r\nimport { EtudiantsState, Etudiant } from \"../../store/etudiants/types\";\r\nimport { fetchRequest, deleteEtudiant } from \"../../store/etudiants/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  DownOutlined,\r\n  CheckSquareOutlined,\r\n  AuditOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Menu, Dropdown, Tooltip } from \"antd\";\r\nimport {} from \"@ant-design/icons\";\r\nimport { useEffect } from \"react\";\r\n\r\n// We can use `typeof` here to map our dispatch types to the props, like so.\r\ninterface PropsFromDispatch {\r\n  fetchRequest: typeof fetchRequest;\r\n  deleteEtudiant: typeof deleteEtudiant;\r\n}\r\ninterface EtudiantListProps {\r\n  selectEtudiant: (etudiant: Etudiant) => void;\r\n  onRequestFinished: (type: string, message: string) => void;\r\n}\r\n\r\ntype AllProps = EtudiantsState & PropsFromDispatch & EtudiantListProps;\r\nconst EtudiantList = ({\r\n  selectEtudiant,\r\n  data,\r\n  loading,\r\n  deleteEtudiant,\r\n  fetchRequest,\r\n  onRequestFinished,\r\n}: AllProps) => {\r\n  const history = useHistory();\r\n  const getMenu = (record: Etudiant) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          key=\"4\"\r\n          icon={<DeleteOutlined />}\r\n          style={{ color: \"#eb4d4b\" }}\r\n        >\r\n          <Popconfirm\r\n            arrowPointAtCenter\r\n            title=\"Etes-vous sûr de supprimer cet Etudiant?\"\r\n            onConfirm={() => confirmDelete(record.id)}\r\n            okText=\"Oui\"\r\n            cancelText=\"Non\"\r\n          >\r\n            Supprimer\r\n          </Popconfirm>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"3\"\r\n          icon={<EditOutlined />}\r\n          style={{ color: \"#108ee9\" }}\r\n          onClick={() => selectEtudiant(record)}\r\n        >\r\n          Modifier\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"1\"\r\n          icon={<CheckSquareOutlined />}\r\n          style={{ color: \"#192a56\" }}\r\n          onClick={() => history.push(\"/absences/\" + record.id)}\r\n        >\r\n          Gérer les absences\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"2\"\r\n          icon={<AuditOutlined />}\r\n          onClick={() => history.push(\"/resultats/\" + record.id)}\r\n        >\r\n          Gérer les résultats\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Nom\",\r\n      dataIndex: \"nom\",\r\n      key: \"nom\",\r\n      render: (text: string) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: \"Prénom\",\r\n      dataIndex: \"prenom\",\r\n      key: \"prenom\",\r\n    },\r\n    {\r\n      title: \"Date de naissance\",\r\n      dataIndex: \"date_naissance\",\r\n      key: \"date_naissance\",\r\n      render: (date: string) => (\r\n        <span>{date ? date.substring(0, 10) : \"---\"}</span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Classe\",\r\n      dataIndex: \"classe\",\r\n      key: \"classe\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      key: \"email\",\r\n      dataIndex: \"email\",\r\n    },\r\n    {\r\n      title: \"Sexe\",\r\n      key: \"sexe\",\r\n      dataIndex: \"sexe\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actons\",\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <Dropdown overlay={getMenu(record)} trigger={[\"click\"]}>\r\n            <Button>\r\n              Actions <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const confirmDelete = (id: number) => {\r\n    deleteEtudiant(id);\r\n    onRequestFinished(\"Succès\", \"Etudiant supprimé!\");\r\n  };\r\n  useEffect(() => {\r\n    fetchRequest(\"\");\r\n  }, []);\r\n\r\n  return (\r\n    <Table\r\n      loading={loading}\r\n      columns={columns}\r\n      dataSource={data}\r\n      rowKey={(record) => record.id}\r\n      className=\"responsive-table\"\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = ({ etudiants }: ApplicationState) => ({\r\n  data: etudiants.data,\r\n  loading: etudiants.loading,\r\n});\r\n\r\nconst mapDispatchToProps = { fetchRequest, deleteEtudiant };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EtudiantList);\r\n","C:\\Users\\Achraff\\projects\\store\\src\\views\\Enseignant\\ListEnseignant.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\components\\Enseignant\\EnseignantList.tsx",["257","258","259"],"import { Table, Popconfirm, Button, Space } from \"antd\";\r\nimport { EnseignantsState, Enseignant } from \"../../store/enseignants/types\";\r\nimport {\r\n  fetchRequest,\r\n  deleteEnseignant,\r\n} from \"../../store/enseignants/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { DeleteOutlined, EditOutlined, DownOutlined } from \"@ant-design/icons\";\r\nimport { Menu, Dropdown, Tooltip } from \"antd\";\r\nimport {} from \"@ant-design/icons\";\r\nimport { useEffect } from \"react\";\r\n\r\n// We can use `typeof` here to map our dispatch types to the props, like so.\r\ninterface PropsFromDispatch {\r\n  fetchRequest: typeof fetchRequest;\r\n  deleteEnseignant: typeof deleteEnseignant;\r\n}\r\ninterface EnseignantListProps {\r\n  selectEnseignant: (enseignant: Enseignant) => void;\r\n  onRequestFinished: (type: string, message: string) => void;\r\n}\r\n\r\ntype AllProps = EnseignantsState & PropsFromDispatch & EnseignantListProps;\r\nconst EnseignantList = ({\r\n  selectEnseignant,\r\n  data,\r\n  loading,\r\n  deleteEnseignant,\r\n  fetchRequest,\r\n  onRequestFinished,\r\n}: AllProps) => {\r\n  const getMenu = (record: Enseignant) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          key=\"4\"\r\n          icon={<DeleteOutlined />}\r\n          style={{ color: \"#eb4d4b\" }}\r\n        >\r\n          <Popconfirm\r\n            arrowPointAtCenter\r\n            title=\"Etes-vous sûr de supprimer cet Enseignant?\"\r\n            onConfirm={() => confirmDelete(record.id)}\r\n            okText=\"Oui\"\r\n            cancelText=\"Non\"\r\n          >\r\n            Supprimer\r\n          </Popconfirm>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"3\"\r\n          icon={<EditOutlined />}\r\n          style={{ color: \"#108ee9\" }}\r\n          onClick={() => selectEnseignant(record)}\r\n        >\r\n          Modifier\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Nom\",\r\n      dataIndex: \"nom\",\r\n      key: \"nom\",\r\n      render: (text: string) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: \"Prénom\",\r\n      dataIndex: \"prenom\",\r\n      key: \"prenom\",\r\n    },\r\n    {\r\n      title: \"Date de naissance\",\r\n      dataIndex: \"date_naissance\",\r\n      key: \"date_naissance\",\r\n    },\r\n    {\r\n      title: \"Grade\",\r\n      dataIndex: \"grade\",\r\n      key: \"grade\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      key: \"email\",\r\n      dataIndex: \"email\",\r\n    },\r\n    {\r\n      title: \"Sexe\",\r\n      key: \"sexe\",\r\n      dataIndex: \"sexe\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actons\",\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <Dropdown overlay={getMenu(record)} trigger={[\"click\"]}>\r\n            <Button>\r\n              Actions <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const confirmDelete = (id: number) => {\r\n    deleteEnseignant(id);\r\n    onRequestFinished(\"Succès\", \"Enseignant supprimé!\");\r\n  };\r\n  useEffect(() => {\r\n    fetchRequest(\"\");\r\n  }, []);\r\n\r\n  return (\r\n    <Table\r\n      loading={loading}\r\n      columns={columns}\r\n      dataSource={data}\r\n      rowKey={(record) => record.id}\r\n      className=\"responsive-table\"\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = ({ enseignants }: ApplicationState) => ({\r\n  data: enseignants.data,\r\n  loading: enseignants.loading,\r\n});\r\n\r\nconst mapDispatchToProps = { fetchRequest, deleteEnseignant };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnseignantList);\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\Enseignant\\EnseignantForm.tsx",["260","261","262"],"C:\\Users\\Achraff\\projects\\store\\src\\views\\Cadre\\ListCadre.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\components\\Cadre\\CadreList.tsx",["263","264","265"],"import { Table, Popconfirm, Button, Space } from \"antd\";\r\nimport { CadresState, Cadre } from \"../../store/cadres/types\";\r\nimport { fetchRequest, deleteCadre } from \"../../store/cadres/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { DeleteOutlined, EditOutlined, DownOutlined } from \"@ant-design/icons\";\r\nimport { Menu, Dropdown, Tooltip } from \"antd\";\r\nimport {} from \"@ant-design/icons\";\r\nimport { useEffect } from \"react\";\r\n\r\n// We can use `typeof` here to map our dispatch types to the props, like so.\r\ninterface PropsFromDispatch {\r\n  fetchRequest: typeof fetchRequest;\r\n  deleteCadre: typeof deleteCadre;\r\n}\r\ninterface CadreListProps {\r\n  selectCadre: (cadre: Cadre) => void;\r\n  onRequestFinished: (type: string, message: string) => void;\r\n}\r\n\r\ntype AllProps = CadresState & PropsFromDispatch & CadreListProps;\r\nconst CadreList = ({\r\n  selectCadre,\r\n  data,\r\n  loading,\r\n  deleteCadre,\r\n  fetchRequest,\r\n  onRequestFinished,\r\n}: AllProps) => {\r\n  const getMenu = (record: Cadre) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          key=\"4\"\r\n          icon={<DeleteOutlined />}\r\n          style={{ color: \"#eb4d4b\" }}\r\n        >\r\n          <Popconfirm\r\n            arrowPointAtCenter\r\n            title=\"Etes-vous sûr de supprimer ce cadre administratif?\"\r\n            onConfirm={() => confirmDelete(record.id)}\r\n            okText=\"Oui\"\r\n            cancelText=\"Non\"\r\n          >\r\n            Supprimer\r\n          </Popconfirm>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"3\"\r\n          icon={<EditOutlined />}\r\n          style={{ color: \"#108ee9\" }}\r\n          onClick={() => selectCadre(record)}\r\n        >\r\n          Modifier\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Nom\",\r\n      dataIndex: \"nom\",\r\n      key: \"nom\",\r\n      render: (text: string) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: \"Prénom\",\r\n      dataIndex: \"prenom\",\r\n      key: \"prenom\",\r\n    },\r\n    {\r\n      title: \"Date de naissance\",\r\n      dataIndex: \"date_naissance\",\r\n      key: \"date_naissance\",\r\n    },\r\n    {\r\n      title: \"Poste\",\r\n      dataIndex: \"poste\",\r\n      key: \"poste\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      key: \"email\",\r\n      dataIndex: \"email\",\r\n    },\r\n    {\r\n      title: \"Sexe\",\r\n      key: \"sexe\",\r\n      dataIndex: \"sexe\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actons\",\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <Dropdown overlay={getMenu(record)} trigger={[\"click\"]}>\r\n            <Button>\r\n              Actions <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const confirmDelete = (id: number) => {\r\n    deleteCadre(id);\r\n    onRequestFinished(\"Succès\", \"Cadre administratif supprimé!\");\r\n  };\r\n  useEffect(() => {\r\n    fetchRequest(\"\");\r\n  }, []);\r\n\r\n  return (\r\n    <Table\r\n      loading={loading}\r\n      columns={columns}\r\n      dataSource={data}\r\n      rowKey={(record) => record.id}\r\n      className=\"responsive-table\"\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = ({ cadres }: ApplicationState) => ({\r\n  data: cadres.data,\r\n  loading: cadres.loading,\r\n});\r\n\r\nconst mapDispatchToProps = { fetchRequest, deleteCadre };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CadreList);\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\Cadre\\CadreForm.tsx",["266","267","268"],"C:\\Users\\Achraff\\projects\\store\\src\\store\\resultats\\reducer.ts",["269","270"],"C:\\Users\\Achraff\\projects\\store\\src\\store\\absences\\reducer.ts",["271","272"],"C:\\Users\\Achraff\\projects\\store\\src\\store\\resultats\\types.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\absences\\types.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\absences\\sagas.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\resultats\\sagas.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\resultats\\actions.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\absences\\actions.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\views\\Absence\\ListAbsence.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\views\\Resultat\\ListResultat.tsx",["273"],"C:\\Users\\Achraff\\projects\\store\\src\\components\\Absence\\AbsenceForm.tsx",["274","275","276"],"C:\\Users\\Achraff\\projects\\store\\src\\components\\Absence\\AbsenceList.tsx",["277","278","279"],"import { Table, Popconfirm, Button, Space } from \"antd\";\r\nimport { AbsencesState, Absence } from \"../../store/absences/types\";\r\nimport { fetchRequest, deleteAbsence } from \"../../store/absences/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { DeleteOutlined, EditOutlined, DownOutlined } from \"@ant-design/icons\";\r\nimport { Menu, Dropdown, Tooltip } from \"antd\";\r\nimport {} from \"@ant-design/icons\";\r\nimport { useEffect } from \"react\";\r\nimport { Etudiant } from \"../../store/etudiants/types\";\r\n\r\n// We can use `typeof` here to map our dispatch types to the props, like so.\r\ninterface PropsFromDispatch {\r\n  fetchRequest: typeof fetchRequest;\r\n  deleteAbsence: typeof deleteAbsence;\r\n}\r\ninterface AbsenceListProps {\r\n  selectAbsence: (absence: Absence) => void;\r\n  onRequestFinished: (type: string, message: string) => void;\r\n  etudiantId: string | undefined;\r\n}\r\n\r\ntype AllProps = AbsencesState & PropsFromDispatch & AbsenceListProps;\r\nconst AbsenceList = ({\r\n  selectAbsence,\r\n  data,\r\n  loading,\r\n  deleteAbsence,\r\n  fetchRequest,\r\n  onRequestFinished,\r\n  etudiantId,\r\n}: AllProps) => {\r\n  const getMenu = (record: Absence) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          key=\"4\"\r\n          icon={<DeleteOutlined />}\r\n          style={{ color: \"#eb4d4b\" }}\r\n        >\r\n          <Popconfirm\r\n            arrowPointAtCenter\r\n            title=\"Etes-vous sûr de supprimer cette Absence?\"\r\n            onConfirm={() => confirmDelete(record.id)}\r\n            okText=\"Oui\"\r\n            cancelText=\"Non\"\r\n          >\r\n            Supprimer\r\n          </Popconfirm>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"3\"\r\n          icon={<EditOutlined />}\r\n          style={{ color: \"#108ee9\" }}\r\n          onClick={() => selectAbsence(record)}\r\n        >\r\n          Modifier\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Date de l'absence\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n      render: (text: string) => <strong>{text}</strong>,\r\n    },\r\n    {\r\n      title: \"Annee Scolaire\",\r\n      dataIndex: \"anneeScolaire\",\r\n      key: \"anneeScolaire\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actions\",\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <Dropdown overlay={getMenu(record)} trigger={[\"click\"]}>\r\n            <Button>\r\n              Actions <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const confirmDelete = (id: number) => {\r\n    deleteAbsence(id);\r\n    onRequestFinished(\"Succès\", \"Absence supprimé!\");\r\n  };\r\n  useEffect(() => {\r\n    if (etudiantId) fetchRequest(etudiantId);\r\n  }, []);\r\n\r\n  return (\r\n    <Table\r\n      loading={loading}\r\n      columns={columns}\r\n      dataSource={data}\r\n      rowKey={(record) => record.id}\r\n      className=\"responsive-table\"\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = ({ absences }: ApplicationState) => ({\r\n  data: absences.data,\r\n  loading: absences.loading,\r\n});\r\n\r\nconst mapDispatchToProps = { fetchRequest, deleteAbsence };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AbsenceList);\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\Resultat\\ResultatForm.tsx",["280","281","282"],"import { storeResultat, updateResultat } from \"../../store/resultats/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { ResultatsState, Resultat } from \"../../store/resultats/types\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, Select, Modal } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4, sm: 6 },\r\n  wrapperCol: { span: 20, sm: 18 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 4, span: 20 },\r\n};\r\ninterface CreateModalProps {\r\n  title: string;\r\n  isModalVisible: boolean;\r\n  handleOk: () => void;\r\n  handleCancel: () => void;\r\n  onRequestFinished: (type: string, message: string) => void;\r\n  selectedResultat: Resultat | undefined;\r\n  etudiantId: string | undefined;\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n  storeResultat: typeof storeResultat;\r\n  updateResultat: typeof updateResultat;\r\n}\r\n\r\ntype AllProps = PropsFromDispatch & CreateModalProps & ResultatsState;\r\n\r\nconst ResultatForm = ({\r\n  title,\r\n  isModalVisible,\r\n  handleOk,\r\n  handleCancel,\r\n  storeResultat,\r\n  onRequestFinished,\r\n  selectedResultat,\r\n  updateResultat,\r\n  loading,\r\n  etudiantId,\r\n}: AllProps) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [isCreate, setIsCreate] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    if (selectedResultat) {\r\n      setIsCreate(false);\r\n      form.setFieldsValue(selectedResultat);\r\n    } else {\r\n      setIsCreate(true);\r\n      form.resetFields();\r\n    }\r\n  }, [selectedResultat]);\r\n\r\n  useEffect(() => {\r\n    if (!loading && requestSent) {\r\n      setRequestSent(false);\r\n      onRequestFinished(\r\n        \"Succès!\",\r\n        isCreate ? \"Un nouveau resultat a été crée\" : \"Resultat modifié!\"\r\n      );\r\n    }\r\n  }, [loading]);\r\n\r\n  const onFinish = (values: Resultat) => {\r\n    setRequestSent(true);\r\n    if (isCreate) storeResultat({ ...values, etudiantId });\r\n    else {\r\n      updateResultat(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      visible={isModalVisible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={[\r\n        <Button key=\"back\" onClick={handleCancel}>\r\n          Annuler\r\n        </Button>,\r\n        <Button\r\n          key=\"submit\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          form=\"myForm\"\r\n          loading={loading}\r\n        >\r\n          Confirmer\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Form\r\n        {...layout}\r\n        form={form}\r\n        name=\"control-hooks\"\r\n        onFinish={onFinish}\r\n        id=\"myForm\"\r\n      >\r\n        <Form.Item shouldUpdate name=\"id\" label=\"id\" hidden></Form.Item>\r\n        <Form.Item\r\n          shouldUpdate\r\n          name=\"moyenne\"\r\n          label=\"Moyenne\"\r\n          rules={[{ required: true, max: 20, min: 0 }]}\r\n        >\r\n          <Input\r\n            placeholder=\"Préciser la moyenne...\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"20\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"anneeScolaire\"\r\n          label=\"Année scolaire\"\r\n          rules={[{ required: true }]}\r\n        >\r\n          <Select placeholder=\"Selectionner une option\" allowClear>\r\n            <Option value=\"2019/2020\">2019/2020</Option>\r\n            <Option value=\"2020/2021\">2020/2021</Option>\r\n            <Option value=\"2021/2022\">2021/2022</Option>\r\n            <Option value=\"2022/2023\">2022/2023</Option>\r\n            <Option value=\"2023/2024\">2023/2024</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        {/* <Form.Item\r\n          name=\"anneeScolaire\"\r\n          label=\"Année scolaire\"\r\n          rules={[{ required: true }]}\r\n        >\r\n          <Input placeholder=\"Préciser l'année scolaire...\" />\r\n        </Form.Item> */}\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nconst mapStateToProps = ({ resultats }: ApplicationState) => ({\r\n  data: resultats.data,\r\n  loading: resultats.loading,\r\n});\r\n\r\nconst mapDispatchToProps = { storeResultat, updateResultat };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultatForm);\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\Resultat\\ResultatList.tsx",["283","284","285"],"import { Table, Popconfirm, Button, Space } from \"antd\";\r\nimport { ResultatsState, Resultat } from \"../../store/resultats/types\";\r\nimport { fetchRequest, deleteResultat } from \"../../store/resultats/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { DeleteOutlined, EditOutlined, DownOutlined } from \"@ant-design/icons\";\r\nimport { Menu, Dropdown, Tooltip } from \"antd\";\r\nimport {} from \"@ant-design/icons\";\r\nimport { useEffect } from \"react\";\r\nimport { Etudiant } from \"../../store/etudiants/types\";\r\n\r\n// We can use `typeof` here to map our dispatch types to the props, like so.\r\ninterface PropsFromDispatch {\r\n  fetchRequest: typeof fetchRequest;\r\n  deleteResultat: typeof deleteResultat;\r\n}\r\ninterface ResultatListProps {\r\n  selectResultat: (resultat: Resultat) => void;\r\n  onRequestFinished: (type: string, message: string) => void;\r\n  etudiantId: string | undefined;\r\n}\r\n\r\ntype AllProps = ResultatsState & PropsFromDispatch & ResultatListProps;\r\nconst ResultatList = ({\r\n  selectResultat,\r\n  data,\r\n  loading,\r\n  deleteResultat,\r\n  fetchRequest,\r\n  onRequestFinished,\r\n  etudiantId,\r\n}: AllProps) => {\r\n  const getMenu = (record: Resultat) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          key=\"4\"\r\n          icon={<DeleteOutlined />}\r\n          style={{ color: \"#eb4d4b\" }}\r\n        >\r\n          <Popconfirm\r\n            arrowPointAtCenter\r\n            title=\"Etes-vous sûr de supprimer cet Resultat?\"\r\n            onConfirm={() => confirmDelete(record.id)}\r\n            okText=\"Oui\"\r\n            cancelText=\"Non\"\r\n          >\r\n            Supprimer\r\n          </Popconfirm>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"3\"\r\n          icon={<EditOutlined />}\r\n          style={{ color: \"#108ee9\" }}\r\n          onClick={() => selectResultat(record)}\r\n        >\r\n          Modifier\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Moyenne\",\r\n      dataIndex: \"moyenne\",\r\n      key: \"moyenne\",\r\n      render: (text: string) => <strong>{text}</strong>,\r\n    },\r\n    {\r\n      title: \"Annee Scolaire\",\r\n      dataIndex: \"anneeScolaire\",\r\n      key: \"anneeScolaire\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actions\",\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <Dropdown overlay={getMenu(record)} trigger={[\"click\"]}>\r\n            <Button>\r\n              Actions <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const confirmDelete = (id: number) => {\r\n    deleteResultat(id);\r\n    onRequestFinished(\"Succès\", \"Resultat supprimé!\");\r\n  };\r\n  useEffect(() => {\r\n    if (etudiantId) fetchRequest(etudiantId);\r\n  }, []);\r\n\r\n  return (\r\n    <Table\r\n      loading={loading}\r\n      columns={columns}\r\n      dataSource={data}\r\n      rowKey={(record) => record.id}\r\n      className=\"responsive-table\"\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = ({ resultats }: ApplicationState) => ({\r\n  data: resultats.data,\r\n  loading: resultats.loading,\r\n});\r\n\r\nconst mapDispatchToProps = { fetchRequest, deleteResultat };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultatList);\r\n","C:\\Users\\Achraff\\projects\\store\\src\\views\\Statistique\\ResultatView.tsx",["286","287"],"C:\\Users\\Achraff\\projects\\store\\src\\components\\Statistique\\LineChart.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\components\\Statistique\\PieChart.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\components\\Statistique\\Ranking.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\views\\Statistique\\AbsenceView.tsx",["288","289"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Card, Image, Select } from \"antd\";\r\nimport LineChart from \"../../components/Statistique/LineChart\";\r\nimport PieChart from \"../../components/Statistique/PieChart\";\r\n\r\nimport { callApi } from \"../../utils/api\";\r\nconst { Option } = Select;\r\nconst AbsenceView: React.FC = () => {\r\n  const [anneeScolaire, setAnneeScolaire] = useState(\"2020/2021\");\r\n  const [anneScolaireData, setAnneScolaireData] = useState([\r\n    { critere: \"\", valeur: 0 },\r\n  ]);\r\n  const [absencesByClass, setAbsenceByClass] = useState([\r\n    { critere: \"\", valeur: 0 },\r\n  ]);\r\n  const [absencesByDate, setAbsenceByDate] = useState([\r\n    { critere: \"\", valeur: 0 },\r\n  ]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function onChange(value: string) {\r\n    setAnneeScolaire(value);\r\n    setLoading(true);\r\n    callApi(\"get\", \"absences/statistiques/classe?anneeScolaire=\" + value).then(\r\n      (response: any) => {\r\n        setAbsenceByClass(response);\r\n      }\r\n    );\r\n\r\n    callApi(\"get\", \"absences/statistiques/date?anneeScolaire=\" + value).then(\r\n      (response: any) => {\r\n        setAbsenceByDate(response);\r\n        setLoading(false);\r\n      }\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    callApi(\"get\", \"absences/statistiques/anneeScolaire\").then(\r\n      (response: any) => {\r\n        setAnneScolaireData(response);\r\n      }\r\n    );\r\n    onChange(\"2020/2021\");\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h4>Séléctionner une année scolaire</h4>\r\n      <Select\r\n        defaultValue=\"2020/2021\"\r\n        style={{ width: 200, marginBottom: \"20px\" }}\r\n        placeholder=\"Selectionner une année scolaire\"\r\n        onChange={onChange}\r\n        loading={loading}\r\n      >\r\n        <Option value=\"2019/2020\">2019/2020</Option>\r\n        <Option value=\"2020/2021\">2020/2021</Option>\r\n        <Option value=\"2021/2022\">2021/2022</Option>\r\n        <Option value=\"2022/2023\">2022/2023</Option>\r\n        <Option value=\"2023/2024\">2023/2024</Option>\r\n      </Select>\r\n      <Row gutter={12}>\r\n        <Col xs={24} sm={12} md={12} className=\"mt-2\">\r\n          <LineChart\r\n            title=\"Absences par année scolaire\"\r\n            data={anneScolaireData}\r\n          />\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} className=\"mt-2\">\r\n          <PieChart\r\n            data={absencesByClass}\r\n            title={`Absences par classe pour l'année: ${anneeScolaire}`}\r\n          />\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} className=\"mt-2\">\r\n          <LineChart\r\n            data={absencesByDate}\r\n            title={`Absences par date pour l'année: ${anneeScolaire}`}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AbsenceView;\r\n","C:\\Users\\Achraff\\projects\\store\\src\\views\\Home.tsx",[],{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":2,"column":24,"nodeType":"296","messageId":"297","endLine":2,"endColumn":34},{"ruleId":"298","severity":1,"message":"299","line":49,"column":11,"nodeType":"300","endLine":52,"endColumn":13},{"ruleId":"294","severity":1,"message":"295","line":2,"column":18,"nodeType":"296","messageId":"297","endLine":2,"endColumn":28},{"ruleId":"294","severity":1,"message":"295","line":2,"column":18,"nodeType":"296","messageId":"297","endLine":2,"endColumn":28},{"ruleId":"294","severity":1,"message":"301","line":2,"column":18,"nodeType":"296","messageId":"297","endLine":2,"endColumn":23},{"ruleId":"294","severity":1,"message":"302","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":13},{"ruleId":"294","severity":1,"message":"303","line":2,"column":8,"nodeType":"296","messageId":"297","endLine":2,"endColumn":20},{"ruleId":"290","replacedBy":"304"},{"ruleId":"292","replacedBy":"305"},{"ruleId":"294","severity":1,"message":"306","line":14,"column":7,"nodeType":"296","messageId":"297","endLine":14,"endColumn":17},{"ruleId":"307","severity":1,"message":"308","line":57,"column":6,"nodeType":"309","endLine":57,"endColumn":24,"suggestions":"310"},{"ruleId":"307","severity":1,"message":"311","line":67,"column":6,"nodeType":"309","endLine":67,"endColumn":15,"suggestions":"312"},{"ruleId":"313","severity":1,"message":"314","line":42,"column":11,"nodeType":"296","messageId":"315","endLine":42,"endColumn":18},{"ruleId":"313","severity":1,"message":"314","line":59,"column":11,"nodeType":"296","messageId":"315","endLine":59,"endColumn":18},{"ruleId":"313","severity":1,"message":"314","line":43,"column":11,"nodeType":"296","messageId":"315","endLine":43,"endColumn":18},{"ruleId":"313","severity":1,"message":"314","line":58,"column":11,"nodeType":"296","messageId":"315","endLine":58,"endColumn":18},{"ruleId":"313","severity":1,"message":"314","line":43,"column":11,"nodeType":"296","messageId":"315","endLine":43,"endColumn":18},{"ruleId":"313","severity":1,"message":"314","line":58,"column":11,"nodeType":"296","messageId":"315","endLine":58,"endColumn":18},{"ruleId":"294","severity":1,"message":"316","line":9,"column":9,"nodeType":"296","messageId":"297","endLine":9,"endColumn":13},{"ruleId":"294","severity":1,"message":"317","line":14,"column":26,"nodeType":"296","messageId":"297","endLine":14,"endColumn":33},{"ruleId":"318","severity":1,"message":"319","line":87,"column":33,"nodeType":"300","endLine":87,"endColumn":36},{"ruleId":"307","severity":1,"message":"320","line":137,"column":6,"nodeType":"309","endLine":137,"endColumn":8,"suggestions":"321"},{"ruleId":"294","severity":1,"message":"317","line":10,"column":26,"nodeType":"296","messageId":"297","endLine":10,"endColumn":33},{"ruleId":"318","severity":1,"message":"319","line":67,"column":33,"nodeType":"300","endLine":67,"endColumn":36},{"ruleId":"307","severity":1,"message":"320","line":114,"column":6,"nodeType":"309","endLine":114,"endColumn":8,"suggestions":"322"},{"ruleId":"294","severity":1,"message":"306","line":17,"column":7,"nodeType":"296","messageId":"297","endLine":17,"endColumn":17},{"ruleId":"307","severity":1,"message":"308","line":59,"column":6,"nodeType":"309","endLine":59,"endColumn":26,"suggestions":"323"},{"ruleId":"307","severity":1,"message":"311","line":69,"column":6,"nodeType":"309","endLine":69,"endColumn":15,"suggestions":"324"},{"ruleId":"294","severity":1,"message":"317","line":7,"column":26,"nodeType":"296","messageId":"297","endLine":7,"endColumn":33},{"ruleId":"318","severity":1,"message":"319","line":64,"column":33,"nodeType":"300","endLine":64,"endColumn":36},{"ruleId":"307","severity":1,"message":"320","line":111,"column":6,"nodeType":"309","endLine":111,"endColumn":8,"suggestions":"325"},{"ruleId":"294","severity":1,"message":"306","line":14,"column":7,"nodeType":"296","messageId":"297","endLine":14,"endColumn":17},{"ruleId":"307","severity":1,"message":"308","line":56,"column":6,"nodeType":"309","endLine":56,"endColumn":21,"suggestions":"326"},{"ruleId":"307","severity":1,"message":"311","line":68,"column":6,"nodeType":"309","endLine":68,"endColumn":15,"suggestions":"327"},{"ruleId":"313","severity":1,"message":"314","line":43,"column":11,"nodeType":"296","messageId":"315","endLine":43,"endColumn":18},{"ruleId":"313","severity":1,"message":"314","line":58,"column":11,"nodeType":"296","messageId":"315","endLine":58,"endColumn":18},{"ruleId":"313","severity":1,"message":"314","line":43,"column":11,"nodeType":"296","messageId":"315","endLine":43,"endColumn":18},{"ruleId":"313","severity":1,"message":"314","line":58,"column":11,"nodeType":"296","messageId":"315","endLine":58,"endColumn":18},{"ruleId":"294","severity":1,"message":"328","line":9,"column":11,"nodeType":"296","messageId":"297","endLine":9,"endColumn":21},{"ruleId":"294","severity":1,"message":"306","line":14,"column":7,"nodeType":"296","messageId":"297","endLine":14,"endColumn":17},{"ruleId":"307","severity":1,"message":"308","line":58,"column":6,"nodeType":"309","endLine":58,"endColumn":23,"suggestions":"329"},{"ruleId":"307","severity":1,"message":"311","line":68,"column":6,"nodeType":"309","endLine":68,"endColumn":15,"suggestions":"330"},{"ruleId":"294","severity":1,"message":"317","line":7,"column":26,"nodeType":"296","messageId":"297","endLine":7,"endColumn":33},{"ruleId":"294","severity":1,"message":"331","line":10,"column":10,"nodeType":"296","messageId":"297","endLine":10,"endColumn":18},{"ruleId":"307","severity":1,"message":"332","line":94,"column":6,"nodeType":"309","endLine":94,"endColumn":8,"suggestions":"333"},{"ruleId":"294","severity":1,"message":"306","line":14,"column":7,"nodeType":"296","messageId":"297","endLine":14,"endColumn":17},{"ruleId":"307","severity":1,"message":"308","line":58,"column":6,"nodeType":"309","endLine":58,"endColumn":24,"suggestions":"334"},{"ruleId":"307","severity":1,"message":"311","line":68,"column":6,"nodeType":"309","endLine":68,"endColumn":15,"suggestions":"335"},{"ruleId":"294","severity":1,"message":"317","line":7,"column":26,"nodeType":"296","messageId":"297","endLine":7,"endColumn":33},{"ruleId":"294","severity":1,"message":"331","line":10,"column":10,"nodeType":"296","messageId":"297","endLine":10,"endColumn":18},{"ruleId":"307","severity":1,"message":"332","line":94,"column":6,"nodeType":"309","endLine":94,"endColumn":8,"suggestions":"336"},{"ruleId":"294","severity":1,"message":"337","line":2,"column":20,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"338","line":2,"column":26,"nodeType":"296","messageId":"297","endLine":2,"endColumn":31},{"ruleId":"294","severity":1,"message":"337","line":2,"column":20,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"338","line":2,"column":26,"nodeType":"296","messageId":"297","endLine":2,"endColumn":31},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"@typescript-eslint/no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Space' is defined but never used.","'Store' is defined but never used.","'EtudiantForm' is defined but never used.",["339"],["340"],"'tailLayout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.","ArrayExpression",["341"],"React Hook useEffect has missing dependencies: 'isCreate', 'onRequestFinished', and 'requestSent'. Either include them or remove the dependency array. If 'onRequestFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["342"],"@typescript-eslint/no-redeclare","'newData' is already defined.","redeclared","'Text' is assigned a value but never used.","'Tooltip' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'fetchRequest'. Either include it or remove the dependency array. If 'fetchRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["343"],["344"],["345"],["346"],["347"],["348"],["349"],"'ParamTypes' is defined but never used.",["350"],["351"],"'Etudiant' is defined but never used.","React Hook useEffect has missing dependencies: 'etudiantId' and 'fetchRequest'. Either include them or remove the dependency array. If 'fetchRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["352"],["353"],["354"],["355"],"'Card' is defined but never used.","'Image' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"360","fix":"362"},{"desc":"363","fix":"364"},{"desc":"358","fix":"365"},{"desc":"360","fix":"366"},{"desc":"367","fix":"368"},{"desc":"358","fix":"369"},{"desc":"370","fix":"371"},{"desc":"358","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"358","fix":"377"},{"desc":"373","fix":"378"},"Update the dependencies array to be: [form, selectedEtudiant]",{"range":"379","text":"380"},"Update the dependencies array to be: [isCreate, loading, onRequestFinished, requestSent]",{"range":"381","text":"382"},"Update the dependencies array to be: [fetchRequest]",{"range":"383","text":"384"},{"range":"385","text":"384"},"Update the dependencies array to be: [form, selectedEnseignant]",{"range":"386","text":"387"},{"range":"388","text":"382"},{"range":"389","text":"384"},"Update the dependencies array to be: [form, selectedCadre]",{"range":"390","text":"391"},{"range":"392","text":"382"},"Update the dependencies array to be: [form, selectedAbsence]",{"range":"393","text":"394"},{"range":"395","text":"382"},"Update the dependencies array to be: [etudiantId, fetchRequest]",{"range":"396","text":"397"},"Update the dependencies array to be: [form, selectedResultat]",{"range":"398","text":"399"},{"range":"400","text":"382"},{"range":"401","text":"397"},[1551,1569],"[form, selectedEtudiant]",[1805,1814],"[isCreate, loading, onRequestFinished, requestSent]",[3653,3655],"[fetchRequest]",[3004,3006],[1559,1579],"[form, selectedEnseignant]",[1819,1828],[2918,2920],[1456,1471],"[form, selectedCadre]",[1751,1760],[1544,1561],"[form, selectedAbsence]",[1790,1799],[2744,2746],"[etudiantId, fetchRequest]",[1563,1581],"[form, selectedResultat]",[1817,1826],[2759,2761]]