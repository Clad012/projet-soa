[{"C:\\Users\\Achraff\\projects\\store\\src\\index.tsx":"1","C:\\Users\\Achraff\\projects\\store\\src\\reportWebVitals.ts":"2","C:\\Users\\Achraff\\projects\\store\\src\\App.tsx":"3","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Sidebar.tsx":"4","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Dashboard.tsx":"5","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Container.tsx":"6","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Navbar.tsx":"7","C:\\Users\\Achraff\\projects\\store\\src\\routes.tsx":"8","C:\\Users\\Achraff\\projects\\store\\src\\configureStore.ts":"9","C:\\Users\\Achraff\\projects\\store\\src\\store\\index.ts":"10","C:\\Users\\Achraff\\projects\\store\\src\\utils\\api.ts":"11","C:\\Users\\Achraff\\projects\\store\\src\\views\\Store.tsx":"12","C:\\Users\\Achraff\\projects\\store\\src\\components\\StatisticCard.tsx":"13","C:\\Users\\Achraff\\projects\\store\\src\\views\\Etudiant\\CreateEtudiant.tsx":"14","C:\\Users\\Achraff\\projects\\store\\src\\components\\Etudiant\\EtudiantForm.tsx":"15","C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\sagas.ts":"16","C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\types.ts":"17","C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\actions.ts":"18","C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\reducer.ts":"19","C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\sagas.ts":"20","C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\reducer.ts":"21","C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\types.ts":"22","C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\actions.ts":"23","C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\sagas.ts":"24","C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\reducer.ts":"25","C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\types.ts":"26","C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\actions.ts":"27","C:\\Users\\Achraff\\projects\\store\\src\\views\\Etudiant\\ListEtudiant.tsx":"28","C:\\Users\\Achraff\\projects\\store\\src\\components\\Etudiant\\EtudiantList.tsx":"29","C:\\Users\\Achraff\\projects\\store\\src\\views\\Enseignant\\ListEnseignant.tsx":"30","C:\\Users\\Achraff\\projects\\store\\src\\components\\Enseignant\\EnseignantList.tsx":"31","C:\\Users\\Achraff\\projects\\store\\src\\components\\Enseignant\\EnseignantForm.tsx":"32","C:\\Users\\Achraff\\projects\\store\\src\\views\\Cadre\\ListCadre.tsx":"33","C:\\Users\\Achraff\\projects\\store\\src\\components\\Cadre\\CadreList.tsx":"34","C:\\Users\\Achraff\\projects\\store\\src\\components\\Cadre\\CadreForm.tsx":"35"},{"size":735,"mtime":1607349062010,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":1607274983784,"results":"38","hashOfConfig":"37"},{"size":703,"mtime":1607348052309,"results":"39","hashOfConfig":"37"},{"size":2057,"mtime":1609511121240,"results":"40","hashOfConfig":"37"},{"size":677,"mtime":1609462234855,"results":"41","hashOfConfig":"37"},{"size":602,"mtime":1609461827427,"results":"42","hashOfConfig":"37"},{"size":623,"mtime":1609461692238,"results":"43","hashOfConfig":"37"},{"size":709,"mtime":1609460647863,"results":"44","hashOfConfig":"37"},{"size":1539,"mtime":1607349079422,"results":"45","hashOfConfig":"37"},{"size":1162,"mtime":1609460139892,"results":"46","hashOfConfig":"37"},{"size":287,"mtime":1607348017993,"results":"47","hashOfConfig":"37"},{"size":1473,"mtime":1607456225866,"results":"48","hashOfConfig":"37"},{"size":1326,"mtime":1607351784125,"results":"49","hashOfConfig":"37"},{"size":266,"mtime":1609207786444,"results":"50","hashOfConfig":"37"},{"size":4155,"mtime":1609512204537,"results":"51","hashOfConfig":"37"},{"size":4643,"mtime":1609512345485,"results":"52","hashOfConfig":"37"},{"size":1166,"mtime":1609510584344,"results":"53","hashOfConfig":"37"},{"size":1490,"mtime":1609460516838,"results":"54","hashOfConfig":"37"},{"size":2372,"mtime":1609460521666,"results":"55","hashOfConfig":"37"},{"size":4784,"mtime":1609512372122,"results":"56","hashOfConfig":"37"},{"size":2422,"mtime":1609460223632,"results":"57","hashOfConfig":"37"},{"size":1227,"mtime":1609510577317,"results":"58","hashOfConfig":"37"},{"size":1582,"mtime":1609460227447,"results":"59","hashOfConfig":"37"},{"size":4478,"mtime":1609512434844,"results":"60","hashOfConfig":"37"},{"size":2297,"mtime":1609460485590,"results":"61","hashOfConfig":"37"},{"size":1072,"mtime":1609510572173,"results":"62","hashOfConfig":"37"},{"size":1352,"mtime":1609460510332,"results":"63","hashOfConfig":"37"},{"size":2274,"mtime":1609462052575,"results":"64","hashOfConfig":"37"},{"size":3683,"mtime":1609511526906,"results":"65","hashOfConfig":"37"},{"size":2292,"mtime":1609462071067,"results":"66","hashOfConfig":"37"},{"size":3395,"mtime":1609511515425,"results":"67","hashOfConfig":"37"},{"size":4226,"mtime":1609512192336,"results":"68","hashOfConfig":"37"},{"size":2190,"mtime":1609462081836,"results":"69","hashOfConfig":"37"},{"size":3284,"mtime":1609512044592,"results":"70","hashOfConfig":"37"},{"size":4141,"mtime":1609512176851,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"pkylf2",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"74"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Achraff\\projects\\store\\src\\index.tsx",[],["156","157"],"C:\\Users\\Achraff\\projects\\store\\src\\reportWebVitals.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\App.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Sidebar.tsx",["158","159"],"import React from \"react\";\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport {\r\n  DesktopOutlined,\r\n  BarChartOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"../stylesheets/Sidebar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default class Sidebar extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed: boolean) => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.resize.bind(this));\r\n    this.resize();\r\n  }\r\n\r\n  resize() {\r\n    this.setState({ collapsed: window.innerWidth <= 760 });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.resize.bind(this));\r\n  }\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    return (\r\n      <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n        <div\r\n          className=\"logo\"\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"5px\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"/projetSOA.svg\"\r\n            style={{ width: collapsed ? \"50px\" : \"120px\" }}\r\n          />\r\n        </div>\r\n        <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\r\n          <Menu.Item key=\"1\" icon={<TeamOutlined />}>\r\n            <Link to=\"/etudiants\"> Etudiants</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n            <Link to=\"/enseignants\"> Enseignants</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<DesktopOutlined />}>\r\n            <Link to=\"/cadres\"> Cadres administratifs</Link>\r\n          </Menu.Item>\r\n          <SubMenu key=\"sub1\" icon={<BarChartOutlined />} title=\"Statitiques\">\r\n            <Menu.Item key=\"4\">Absences</Menu.Item>\r\n            <Menu.Item key=\"5\">Résultats</Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Sider>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Dashboard.tsx",["160"],"import React from \"react\";\r\nimport { Layout, Breadcrumb } from \"antd\";\r\nimport \"../stylesheets/Sidebar.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Container from \"./Container\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nexport default class Dashboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Sidebar />\r\n        <Layout className=\"site-layout\">\r\n          <Navbar />\r\n          <Container />\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Projet SOA ©2021 By Achraf Chaibi & Adel Boushih\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Container.tsx",["161"],"import React from \"react\";\r\nimport { Layout, Breadcrumb } from \"antd\";\r\nimport Routes from \"../../routes\";\r\nconst { Content } = Layout;\r\n\r\nexport default class Dashboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <Content style={{ margin: \"0 16px\", paddingTop: \"30px\" }}>\r\n        {/* <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n          <Breadcrumb.Item>User</Breadcrumb.Item>\r\n          <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n        </Breadcrumb> */}\r\n        <div style={{ padding: 24, minHeight: 360 }}>\r\n          <Routes />\r\n        </div>\r\n      </Content>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\layouts\\Navbar.tsx",["162"],"import React from \"react\";\r\nimport { Layout, Space, Avatar, Row, Col } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Header } = Layout;\r\n\r\nexport default class Dashboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <Header\r\n        className=\"site-layout-background\"\r\n        style={{ padding: 0, paddingRight: \"35px\" }}\r\n      >\r\n        <Row justify=\"end\">\r\n          <Col>\r\n            <span style={{ marginRight: \"10px\" }}>Administrateur</span>\r\n            <Avatar size=\"large\" icon={<UserOutlined />} />\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Achraff\\projects\\store\\src\\routes.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\configureStore.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\index.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\utils\\api.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\views\\Store.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\components\\StatisticCard.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\views\\Etudiant\\CreateEtudiant.tsx",["163"],"import React from \"react\";\r\nimport EtudiantForm from \"../../components/Etudiant/EtudiantForm\";\r\nimport { Card } from \"antd\";\r\nconst CreateEtudiant: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Card></Card>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateEtudiant;\r\n",["164","165"],"C:\\Users\\Achraff\\projects\\store\\src\\components\\Etudiant\\EtudiantForm.tsx",["166","167","168"],"import { storeEtudiant, updateEtudiant } from \"../../store/etudiants/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { EtudiantsState, Etudiant } from \"../../store/etudiants/types\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, Select, Modal } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4, sm: 6 },\r\n  wrapperCol: { span: 20, sm: 18 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 4, span: 20 },\r\n};\r\ninterface CreateModalProps {\r\n  title: string;\r\n  isModalVisible: boolean;\r\n  handleOk: () => void;\r\n  handleCancel: () => void;\r\n  onRequestFinished: (type: string, message: string) => void;\r\n  selectedEtudiant: Etudiant | undefined;\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n  storeEtudiant: typeof storeEtudiant;\r\n  updateEtudiant: typeof updateEtudiant;\r\n}\r\n\r\ntype AllProps = PropsFromDispatch & CreateModalProps & EtudiantsState;\r\n\r\nconst EtudiantForm = ({\r\n  title,\r\n  isModalVisible,\r\n  handleOk,\r\n  handleCancel,\r\n  storeEtudiant,\r\n  onRequestFinished,\r\n  selectedEtudiant,\r\n  updateEtudiant,\r\n  loading,\r\n}: AllProps) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [isCreate, setIsCreate] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    if (selectedEtudiant) {\r\n      setIsCreate(false);\r\n      form.setFieldsValue(selectedEtudiant);\r\n    } else {\r\n      setIsCreate(true);\r\n      form.resetFields();\r\n    }\r\n  }, [selectedEtudiant]);\r\n\r\n  useEffect(() => {\r\n    if (!loading && requestSent) {\r\n      setRequestSent(false);\r\n      onRequestFinished(\r\n        \"Succès!\",\r\n        isCreate ? \"Un nouveau etudiant a été crée\" : \"Etudiant modifié!\"\r\n      );\r\n    }\r\n  }, [loading]);\r\n\r\n  const onFinish = (values: Etudiant) => {\r\n    setRequestSent(true);\r\n    if (isCreate) storeEtudiant(values);\r\n    else {\r\n      updateEtudiant(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      visible={isModalVisible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={[\r\n        <Button key=\"back\" onClick={handleCancel}>\r\n          Annuler\r\n        </Button>,\r\n        <Button\r\n          key=\"submit\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          form=\"myForm\"\r\n          loading={loading}\r\n        >\r\n          Confirmer\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Form\r\n        {...layout}\r\n        form={form}\r\n        name=\"control-hooks\"\r\n        onFinish={onFinish}\r\n        id=\"myForm\"\r\n      >\r\n        <Form.Item\r\n          shouldUpdate\r\n          name=\"prenom\"\r\n          label=\"Prénom\"\r\n          rules={[{ required: true }]}\r\n        >\r\n          <Input placeholder=\"Prénom de l'étudiant...\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"nom\" label=\"Nom\" rules={[{ required: true }]}>\r\n          <Input placeholder=\"Nom de l'étudiant...\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          rules={[{ required: true, type: \"email\" }]}\r\n        >\r\n          <Input placeholder=\"Nom de l'étudiant...\" type=\"email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"date_naissance\"\r\n          label=\"Date de naissance\"\r\n          rules={[{ required: true }]}\r\n        >\r\n          <Input placeholder=\"Date de naissance\" type=\"date\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"sexe\" label=\"Sexe\" rules={[{ required: true }]}>\r\n          <Select placeholder=\"Selectionner une option\" allowClear>\r\n            <Option value=\"male\">Homme</Option>\r\n            <Option value=\"female\">Femme</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item name=\"classe\" label=\"Classe\" rules={[{ required: true }]}>\r\n          <Input placeholder=\"Classe de l'étudiant...\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nconst mapStateToProps = ({ etudiants }: ApplicationState) => ({\r\n  data: etudiants.data,\r\n  loading: etudiants.loading,\r\n});\r\n\r\nconst mapDispatchToProps = { storeEtudiant, updateEtudiant };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EtudiantForm);\r\n","C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\sagas.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\types.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\actions.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\etudiants\\reducer.ts",["169","170"],"import { Reducer } from \"redux\";\r\nimport { EtudiantsState, EtudiantsActionTypes } from \"./types\";\r\n\r\nexport const initialState: EtudiantsState = {\r\n  data: [],\r\n  errors: undefined,\r\n  etudiant: undefined,\r\n  loading: false,\r\n  query: \"all\",\r\n};\r\n\r\nconst reducer: Reducer<EtudiantsState> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case EtudiantsActionTypes.FETCH_REQUEST: {\r\n      console.log(\"test2\");\r\n      return { ...state, loading: true, query: action.payload };\r\n    }\r\n    case EtudiantsActionTypes.FETCH_ONE_REQUEST: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case EtudiantsActionTypes.FETCH_ONE_REQUEST_SUCCESS: {\r\n      return { ...state, loading: false, etudiant: action.payload };\r\n    }\r\n    case EtudiantsActionTypes.DELETE_ETUDIANT: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case EtudiantsActionTypes.DELETE_ETUDIANT_SUCCESS: {\r\n      var newData = state.data.slice();\r\n      const elementIndex = newData.findIndex(\r\n        (elt) => elt.elementId === action.payload\r\n      );\r\n      newData.splice(elementIndex, 1);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: newData,\r\n      };\r\n    }\r\n    case EtudiantsActionTypes.UPDATE_ETUDIANT: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case EtudiantsActionTypes.UPDATE_ETUDIANT_SUCCESS: {\r\n      var newData = state.data.slice();\r\n      const elementIndex = newData.findIndex(\r\n        (elt) => elt.elementId === action.payload.etudiantId\r\n      );\r\n      newData[elementIndex] = action.payload;\r\n      newData.splice(elementIndex, 1);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: newData,\r\n      };\r\n    }\r\n    case EtudiantsActionTypes.STORE_ETUDIANT: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case EtudiantsActionTypes.STORE_ETUDIANT_SUCCESS: {\r\n      var newData = state.data.slice();\r\n      newData.unshift(action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: newData,\r\n      };\r\n    }\r\n    case EtudiantsActionTypes.FETCH_SUCCESS: {\r\n      return { ...state, loading: false, data: action.payload };\r\n    }\r\n    case EtudiantsActionTypes.FETCH_ERROR: {\r\n      return { ...state, loading: false, errors: action.payload };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport { reducer as etudiantsReducer };\r\n","C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\sagas.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\reducer.ts",["171","172"],"import { Reducer } from \"redux\";\r\nimport { EnseignantsState, EnseignantsActionTypes } from \"./types\";\r\n\r\nexport const initialState: EnseignantsState = {\r\n  data: [],\r\n  errors: undefined,\r\n  enseignant: undefined,\r\n  loading: false,\r\n  query: \"all\",\r\n};\r\n\r\nconst reducer: Reducer<EnseignantsState> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case EnseignantsActionTypes.FETCH_REQUEST: {\r\n      console.log(\"test2\");\r\n      return { ...state, loading: true, query: action.payload };\r\n    }\r\n    case EnseignantsActionTypes.FETCH_ONE_REQUEST: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case EnseignantsActionTypes.FETCH_ONE_REQUEST_SUCCESS: {\r\n      return { ...state, loading: false, enseignant: action.payload };\r\n    }\r\n    case EnseignantsActionTypes.DELETE_ENSEIGNANT: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case EnseignantsActionTypes.DELETE_ENSEIGNANT_SUCCESS: {\r\n      var newData = state.data.slice();\r\n      const elementIndex = newData.findIndex(\r\n        (elt) => elt.elementId === action.payload\r\n      );\r\n      newData.splice(elementIndex, 1);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: newData,\r\n      };\r\n    }\r\n    case EnseignantsActionTypes.UPDATE_ENSEIGNANT: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case EnseignantsActionTypes.UPDATE_ENSEIGNANT_SUCCESS: {\r\n      var newData = state.data.slice();\r\n      const elementIndex = newData.findIndex(\r\n        (elt) => elt.elementId === action.payload.enseignantId\r\n      );\r\n      newData[elementIndex] = action.payload;\r\n      newData.splice(elementIndex, 1);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: newData,\r\n      };\r\n    }\r\n    case EnseignantsActionTypes.STORE_ENSEIGNANT: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case EnseignantsActionTypes.STORE_ENSEIGNANT_SUCCESS: {\r\n      var newData = state.data.slice();\r\n      newData.unshift(action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: newData,\r\n      };\r\n    }\r\n    case EnseignantsActionTypes.FETCH_SUCCESS: {\r\n      return { ...state, loading: false, data: action.payload };\r\n    }\r\n    case EnseignantsActionTypes.FETCH_ERROR: {\r\n      return { ...state, loading: false, errors: action.payload };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport { reducer as enseignantsReducer };\r\n","C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\types.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\enseignants\\actions.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\sagas.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\reducer.ts",["173","174"],"import { Reducer } from \"redux\";\r\nimport { CadresState, CadresActionTypes } from \"./types\";\r\n\r\nexport const initialState: CadresState = {\r\n  data: [],\r\n  errors: undefined,\r\n  cadre: undefined,\r\n  loading: false,\r\n  query: \"all\",\r\n};\r\n\r\nconst reducer: Reducer<CadresState> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CadresActionTypes.FETCH_REQUEST: {\r\n      console.log(\"test2\");\r\n      return { ...state, loading: true, query: action.payload };\r\n    }\r\n    case CadresActionTypes.FETCH_ONE_REQUEST: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case CadresActionTypes.FETCH_ONE_REQUEST_SUCCESS: {\r\n      return { ...state, loading: false, cadre: action.payload };\r\n    }\r\n    case CadresActionTypes.DELETE_CADRE: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case CadresActionTypes.DELETE_CADRE_SUCCESS: {\r\n      var newData = state.data.slice();\r\n      const elementIndex = newData.findIndex(\r\n        (elt) => elt.elementId === action.payload\r\n      );\r\n      newData.splice(elementIndex, 1);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: newData,\r\n      };\r\n    }\r\n    case CadresActionTypes.UPDATE_CADRE: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case CadresActionTypes.UPDATE_CADRE_SUCCESS: {\r\n      var newData = state.data.slice();\r\n      const elementIndex = newData.findIndex(\r\n        (elt) => elt.elementId === action.payload.cadreId\r\n      );\r\n      newData[elementIndex] = action.payload;\r\n      newData.splice(elementIndex, 1);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: newData,\r\n      };\r\n    }\r\n    case CadresActionTypes.STORE_CADRE: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case CadresActionTypes.STORE_CADRE_SUCCESS: {\r\n      var newData = state.data.slice();\r\n      newData.unshift(action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: newData,\r\n      };\r\n    }\r\n    case CadresActionTypes.FETCH_SUCCESS: {\r\n      return { ...state, loading: false, data: action.payload };\r\n    }\r\n    case CadresActionTypes.FETCH_ERROR: {\r\n      return { ...state, loading: false, errors: action.payload };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport { reducer as cadresReducer };\r\n","C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\types.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\store\\cadres\\actions.ts",[],"C:\\Users\\Achraff\\projects\\store\\src\\views\\Etudiant\\ListEtudiant.tsx",["175"],"import React, { useState } from \"react\";\r\nimport EtudiantList from \"../../components/Etudiant/EtudiantList\";\r\nimport { Card } from \"antd\";\r\nimport { Button, Row, Col, notification, Typography } from \"antd\";\r\nimport { UserAddOutlined, SmileOutlined } from \"@ant-design/icons\";\r\n\r\nimport EtudiantForm from \"../../components/Etudiant/EtudiantForm\";\r\nimport { Etudiant } from \"../../store/etudiants/types\";\r\nconst { Text } = Typography;\r\nconst ListEtudiant: React.FC = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [selectedEtudiant, setSelectedEtudiant] = useState<Etudiant>();\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const onRequestFinished = (type: string, message: string) => {\r\n    notification.open({\r\n      message: type,\r\n      description: message,\r\n      icon: <SmileOutlined style={{ color: \"#108ee9\" }} />,\r\n    });\r\n    setIsModalVisible(false);\r\n  };\r\n  const showModal = (create: boolean) => {\r\n    if (create) {\r\n      setTitle(\"Ajouter un nouveau etudiant\");\r\n      setSelectedEtudiant(undefined);\r\n    }\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const selectEtudiant = (etudiant: Etudiant) => {\r\n    setSelectedEtudiant(etudiant);\r\n    setTitle(\"Modifier etudiant\");\r\n    showModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-between\" className=\"mb-2\">\r\n        <Col>\r\n          <h3 className=\"title\">Gestion des étudiant</h3>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => showModal(true)}\r\n            icon={<UserAddOutlined />}\r\n          >\r\n            Ajouter un nouveau etudiant\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Card>\r\n        <EtudiantList\r\n          selectEtudiant={selectEtudiant}\r\n          onRequestFinished={onRequestFinished}\r\n        />\r\n      </Card>\r\n      <EtudiantForm\r\n        title={title}\r\n        isModalVisible={isModalVisible}\r\n        handleOk={handleOk}\r\n        handleCancel={handleCancel}\r\n        onRequestFinished={onRequestFinished}\r\n        selectedEtudiant={selectedEtudiant}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default ListEtudiant;\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\Etudiant\\EtudiantList.tsx",["176","177","178"],"C:\\Users\\Achraff\\projects\\store\\src\\views\\Enseignant\\ListEnseignant.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\components\\Enseignant\\EnseignantList.tsx",["179","180","181"],"C:\\Users\\Achraff\\projects\\store\\src\\components\\Enseignant\\EnseignantForm.tsx",["182","183","184"],"import {\r\n  storeEnseignant,\r\n  updateEnseignant,\r\n} from \"../../store/enseignants/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { EnseignantsState, Enseignant } from \"../../store/enseignants/types\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, Select, Modal } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4, sm: 6 },\r\n  wrapperCol: { span: 20, sm: 18 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 4, span: 20 },\r\n};\r\ninterface CreateModalProps {\r\n  title: string;\r\n  isModalVisible: boolean;\r\n  handleOk: () => void;\r\n  handleCancel: () => void;\r\n  onRequestFinished: (type: string, message: string) => void;\r\n  selectedEnseignant: Enseignant | undefined;\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n  storeEnseignant: typeof storeEnseignant;\r\n  updateEnseignant: typeof updateEnseignant;\r\n}\r\n\r\ntype AllProps = PropsFromDispatch & CreateModalProps & EnseignantsState;\r\n\r\nconst EnseignantForm = ({\r\n  title,\r\n  isModalVisible,\r\n  handleOk,\r\n  handleCancel,\r\n  storeEnseignant,\r\n  onRequestFinished,\r\n  selectedEnseignant,\r\n  updateEnseignant,\r\n  loading,\r\n}: AllProps) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [isCreate, setIsCreate] = useState(true);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    if (selectedEnseignant) {\r\n      setIsCreate(false);\r\n      form.setFieldsValue(selectedEnseignant);\r\n    } else {\r\n      setIsCreate(true);\r\n      form.resetFields();\r\n    }\r\n  }, [selectedEnseignant]);\r\n\r\n  useEffect(() => {\r\n    if (!loading && requestSent) {\r\n      setRequestSent(false);\r\n      onRequestFinished(\r\n        \"Succès!\",\r\n        isCreate ? \"Un nouveau enseignant a été crée\" : \"Enseignant modifié!\"\r\n      );\r\n    }\r\n  }, [loading]);\r\n\r\n  const onFinish = (values: Enseignant) => {\r\n    setRequestSent(true);\r\n    if (isCreate) storeEnseignant(values);\r\n    else {\r\n      updateEnseignant(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      visible={isModalVisible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={[\r\n        <Button key=\"back\" onClick={handleCancel}>\r\n          Annuler\r\n        </Button>,\r\n        <Button\r\n          key=\"submit\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          form=\"myForm\"\r\n          loading={loading}\r\n        >\r\n          Confirmer\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Form\r\n        {...layout}\r\n        form={form}\r\n        name=\"control-hooks\"\r\n        onFinish={onFinish}\r\n        id=\"myForm\"\r\n      >\r\n        <Form.Item\r\n          shouldUpdate\r\n          name=\"prenom\"\r\n          label=\"Prénom\"\r\n          rules={[{ required: true }]}\r\n        >\r\n          <Input placeholder=\"Prénom de l'enseignant...\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"nom\" label=\"Nom\" rules={[{ required: true }]}>\r\n          <Input placeholder=\"Nom de l'enseignant...\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          rules={[{ required: true, type: \"email\" }]}\r\n        >\r\n          <Input placeholder=\"Nom de l'enseignant...\" type=\"email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"date_naissance\"\r\n          label=\"Date de naissance\"\r\n          rules={[{ required: true }]}\r\n        >\r\n          <Input placeholder=\"Date de naissance\" type=\"date\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"sexe\" label=\"Sexe\" rules={[{ required: true }]}>\r\n          <Select placeholder=\"Selectionner une option\" allowClear>\r\n            <Option value=\"male\">Homme</Option>\r\n            <Option value=\"female\">Femme</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item name=\"grade\" label=\"Grade\" rules={[{ required: true }]}>\r\n          <Input placeholder=\"Grade de l'enseignant...\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nconst mapStateToProps = ({ enseignants }: ApplicationState) => ({\r\n  data: enseignants.data,\r\n  loading: enseignants.loading,\r\n});\r\n\r\nconst mapDispatchToProps = { storeEnseignant, updateEnseignant };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnseignantForm);\r\n","C:\\Users\\Achraff\\projects\\store\\src\\views\\Cadre\\ListCadre.tsx",[],"C:\\Users\\Achraff\\projects\\store\\src\\components\\Cadre\\CadreList.tsx",["185","186","187"],"import { Table, Popconfirm, Button, Space } from \"antd\";\r\nimport { CadresState, Cadre } from \"../../store/cadres/types\";\r\nimport { fetchRequest, deleteCadre } from \"../../store/cadres/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { DeleteOutlined, EditOutlined, DownOutlined } from \"@ant-design/icons\";\r\nimport { Menu, Dropdown, Tooltip } from \"antd\";\r\nimport {} from \"@ant-design/icons\";\r\nimport { useEffect } from \"react\";\r\n\r\n// We can use `typeof` here to map our dispatch types to the props, like so.\r\ninterface PropsFromDispatch {\r\n  fetchRequest: typeof fetchRequest;\r\n  deleteCadre: typeof deleteCadre;\r\n}\r\ninterface CadreListProps {\r\n  selectCadre: (cadre: Cadre) => void;\r\n  onRequestFinished: (type: string, message: string) => void;\r\n}\r\n\r\ntype AllProps = CadresState & PropsFromDispatch & CadreListProps;\r\nconst CadreList = ({\r\n  selectCadre,\r\n  data,\r\n  loading,\r\n  deleteCadre,\r\n  fetchRequest,\r\n  onRequestFinished,\r\n}: AllProps) => {\r\n  const getMenu = (record: Cadre) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          key=\"4\"\r\n          icon={<DeleteOutlined />}\r\n          style={{ color: \"#eb4d4b\" }}\r\n        >\r\n          <Popconfirm\r\n            arrowPointAtCenter\r\n            title=\"Etes-vous sûr de supprimer ce cadre administratif?\"\r\n            onConfirm={() => confirmDelete(record.id)}\r\n            okText=\"Oui\"\r\n            cancelText=\"Non\"\r\n          >\r\n            Supprimer\r\n          </Popconfirm>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"3\"\r\n          icon={<EditOutlined />}\r\n          style={{ color: \"#108ee9\" }}\r\n          onClick={() => selectCadre(record)}\r\n        >\r\n          Modifier\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Nom\",\r\n      dataIndex: \"nom\",\r\n      key: \"nom\",\r\n      render: (text: string) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: \"Prénom\",\r\n      dataIndex: \"prenom\",\r\n      key: \"prenom\",\r\n    },\r\n    {\r\n      title: \"Date de naissance\",\r\n      dataIndex: \"date_naissance\",\r\n      key: \"date_naissance\",\r\n    },\r\n    {\r\n      title: \"Poste\",\r\n      dataIndex: \"poste\",\r\n      key: \"poste\",\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      key: \"email\",\r\n      dataIndex: \"email\",\r\n    },\r\n    {\r\n      title: \"Sexe\",\r\n      key: \"sexe\",\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <Dropdown overlay={getMenu(record)} trigger={[\"click\"]}>\r\n            <Button>\r\n              Actions <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const confirmDelete = (id: number) => {\r\n    deleteCadre(id);\r\n    onRequestFinished(\"Succès\", \"Cadre administratif supprimé!\");\r\n  };\r\n  useEffect(() => {\r\n    fetchRequest(\"\");\r\n  }, []);\r\n\r\n  return (\r\n    <Table\r\n      loading={loading}\r\n      columns={columns}\r\n      dataSource={data}\r\n      rowKey={(record) => record.id}\r\n      className=\"responsive-table\"\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = ({ cadres }: ApplicationState) => ({\r\n  data: cadres.data,\r\n  loading: cadres.loading,\r\n});\r\n\r\nconst mapDispatchToProps = { fetchRequest, deleteCadre };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CadreList);\r\n","C:\\Users\\Achraff\\projects\\store\\src\\components\\Cadre\\CadreForm.tsx",["188","189","190"],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":2,"column":24,"nodeType":"197","messageId":"198","endLine":2,"endColumn":34},{"ruleId":"199","severity":1,"message":"200","line":49,"column":11,"nodeType":"201","endLine":52,"endColumn":13},{"ruleId":"195","severity":1,"message":"196","line":2,"column":18,"nodeType":"197","messageId":"198","endLine":2,"endColumn":28},{"ruleId":"195","severity":1,"message":"196","line":2,"column":18,"nodeType":"197","messageId":"198","endLine":2,"endColumn":28},{"ruleId":"195","severity":1,"message":"202","line":2,"column":18,"nodeType":"197","messageId":"198","endLine":2,"endColumn":23},{"ruleId":"195","severity":1,"message":"203","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":20},{"ruleId":"191","replacedBy":"204"},{"ruleId":"193","replacedBy":"205"},{"ruleId":"195","severity":1,"message":"206","line":14,"column":7,"nodeType":"197","messageId":"198","endLine":14,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":56,"column":6,"nodeType":"209","endLine":56,"endColumn":24,"suggestions":"210"},{"ruleId":"207","severity":1,"message":"211","line":66,"column":6,"nodeType":"209","endLine":66,"endColumn":15,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":43,"column":11,"nodeType":"197","messageId":"215","endLine":43,"endColumn":18},{"ruleId":"213","severity":1,"message":"214","line":59,"column":11,"nodeType":"197","messageId":"215","endLine":59,"endColumn":18},{"ruleId":"213","severity":1,"message":"214","line":43,"column":11,"nodeType":"197","messageId":"215","endLine":43,"endColumn":18},{"ruleId":"213","severity":1,"message":"214","line":59,"column":11,"nodeType":"197","messageId":"215","endLine":59,"endColumn":18},{"ruleId":"213","severity":1,"message":"214","line":43,"column":11,"nodeType":"197","messageId":"215","endLine":43,"endColumn":18},{"ruleId":"213","severity":1,"message":"214","line":59,"column":11,"nodeType":"197","messageId":"215","endLine":59,"endColumn":18},{"ruleId":"195","severity":1,"message":"216","line":9,"column":9,"nodeType":"197","messageId":"198","endLine":9,"endColumn":13},{"ruleId":"195","severity":1,"message":"217","line":13,"column":26,"nodeType":"197","messageId":"198","endLine":13,"endColumn":33},{"ruleId":"218","severity":1,"message":"219","line":80,"column":33,"nodeType":"201","endLine":80,"endColumn":36},{"ruleId":"207","severity":1,"message":"220","line":122,"column":6,"nodeType":"209","endLine":122,"endColumn":8,"suggestions":"221"},{"ruleId":"195","severity":1,"message":"217","line":10,"column":26,"nodeType":"197","messageId":"198","endLine":10,"endColumn":33},{"ruleId":"218","severity":1,"message":"219","line":67,"column":33,"nodeType":"201","endLine":67,"endColumn":36},{"ruleId":"207","severity":1,"message":"220","line":109,"column":6,"nodeType":"209","endLine":109,"endColumn":8,"suggestions":"222"},{"ruleId":"195","severity":1,"message":"206","line":17,"column":7,"nodeType":"197","messageId":"198","endLine":17,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":59,"column":6,"nodeType":"209","endLine":59,"endColumn":26,"suggestions":"223"},{"ruleId":"207","severity":1,"message":"211","line":69,"column":6,"nodeType":"209","endLine":69,"endColumn":15,"suggestions":"224"},{"ruleId":"195","severity":1,"message":"217","line":7,"column":26,"nodeType":"197","messageId":"198","endLine":7,"endColumn":33},{"ruleId":"218","severity":1,"message":"219","line":64,"column":33,"nodeType":"201","endLine":64,"endColumn":36},{"ruleId":"207","severity":1,"message":"220","line":106,"column":6,"nodeType":"209","endLine":106,"endColumn":8,"suggestions":"225"},{"ruleId":"195","severity":1,"message":"206","line":14,"column":7,"nodeType":"197","messageId":"198","endLine":14,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":56,"column":6,"nodeType":"209","endLine":56,"endColumn":21,"suggestions":"226"},{"ruleId":"207","severity":1,"message":"211","line":68,"column":6,"nodeType":"209","endLine":68,"endColumn":15,"suggestions":"227"},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"@typescript-eslint/no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Space' is defined but never used.","'EtudiantForm' is defined but never used.",["228"],["229"],"'tailLayout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.","ArrayExpression",["230"],"React Hook useEffect has missing dependencies: 'isCreate', 'onRequestFinished', and 'requestSent'. Either include them or remove the dependency array. If 'onRequestFinished' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["231"],"@typescript-eslint/no-redeclare","'newData' is already defined.","redeclared","'Text' is assigned a value but never used.","'Tooltip' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'fetchRequest'. Either include it or remove the dependency array. If 'fetchRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["232"],["233"],["234"],["235"],["236"],["237"],["238"],"no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"243","fix":"245"},{"desc":"246","fix":"247"},{"desc":"241","fix":"248"},{"desc":"243","fix":"249"},{"desc":"250","fix":"251"},{"desc":"241","fix":"252"},"Update the dependencies array to be: [form, selectedEtudiant]",{"range":"253","text":"254"},"Update the dependencies array to be: [isCreate, loading, onRequestFinished, requestSent]",{"range":"255","text":"256"},"Update the dependencies array to be: [fetchRequest]",{"range":"257","text":"258"},{"range":"259","text":"258"},"Update the dependencies array to be: [form, selectedEnseignant]",{"range":"260","text":"261"},{"range":"262","text":"256"},{"range":"263","text":"258"},"Update the dependencies array to be: [form, selectedCadre]",{"range":"264","text":"265"},{"range":"266","text":"256"},[1513,1531],"[form, selectedEtudiant]",[1767,1776],"[isCreate, loading, onRequestFinished, requestSent]",[3214,3216],"[fetchRequest]",[2916,2918],[1559,1579],"[form, selectedEnseignant]",[1819,1828],[2830,2832],[1456,1471],"[form, selectedCadre]",[1751,1760]]